apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: react-app
  title: Creates and initializes a new React SPA
  description: This template will generate a Single Page App and deploy it on a Cluster. This application consists of three parts - Code, Backend, and Database.
  tags:
    - application
spec:
  owner: user:le.caothihoang
  type: application
  parameters:
    
    - title: Choose A Repository Location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository location for pipeline templates
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            requestUserCredentials:
              secretsKey: USER_OAUTH_TOKEN
              additionalScopes:
                azure:
                  - email
                  - openid
            allowedHosts:
              - dev.azure.com

    - title: Pipeline Configuration
      required:
        - pipelineBranchName
        - folder
        - pipelineName
      properties:
        folder:
          type: string
          title: Folder
          description: Pipeline folder path
        pipelineName:
          type: string
          title: Pipeline Name
          description: Name for the new pipeline
        pipelineBranchName:
          type: string
          title: Branch Name
          description: The name of the branch to be used for the pipeline
          default: master
      uiSchema:
        Project:
          'ui:autofocus': true
          'ui:placeholder': 'Enter project name'
        Folder:
          'ui:placeholder': 'Enter folder path'
        PipelineName:
          'ui:placeholder': 'Enter pipeline name'
        RepositoryName:
          'ui:placeholder': 'Enter repository name'
        BranchName:
          'ui:placeholder': 'Enter branch name'

    - title: Source Repository Configuration
      properties:
        sourceRepoAlias:
          title: Repository Alias
          type: string
          description: Alias to refer to the source repository in the pipeline
          default: Source
        sourceRepoName:
          title: Repository Name
          type: string
          description: Full path of the repository in Azure DevOps (e.g. ProjectName/repo-name)
          default: Source
        scanBranch:
          title: Branch to Scan
          type: string
          description: Git branch to pull from for scanning
          default: master

    - title: Tool instruction
      properties:
        scanToolsSummary:
          type: string
          title: ' '
          default: |
            The following security scans will be automatically included in your pipeline:

            1. Scan source code with SonarQube:
                Analyzes code for bugs, vulnerabilities, and code smells.
            2. Scan source code with Trivy:
                Scans dependencies, misconfigurations, and secrets.
            3. Scan source code with Snyk:
                Performs static analysis and dependency vulnerability checks.
            4. Scan container with Snyk:
                Analyzes the container image for known vulnerabilities.
            5. Scan container with Trivy:
                Detects vulnerabilities, secrets, and misconfigurations in the container image.
          ui:widget: textarea
          ui:options:
            readonly: true
            rows: 15
    
    - title: Variables Group Mapping
      properties:
        snykCodeVariableGroupName:
          type: string
          title: Snyk Variable Group Name
          description: Name of the variable group to use for Snyk scanning
          default: snyk
        sonarVariableGroupName:
          type: string
          title: Sonar Variable Group Name
          description: Name of the variable group to use for SonarQube scanning
          default: sonar
        trivyCodeVariableGroupName:
          type: string
          title: Trivy Variable Group Name
          description: Name of the variable group to use for Trivy scanning
          default: trivy
        snykImageVariableGroupName:
          type: string
          title: Snyk Image Variable Group Name
          description: Name of the variable group to use for Snyk image scanning
          default: snyk-image
        trivyImageVariableGroupName:
          type: string
          title: Trivy Image Variable Group Name
          description: Name of the variable group to use for Trivy image scanning
          default: trivy-image



    - title: Snyk configuration for code scan
      type: object
      properties:
        useSnykCode:
          title: Use Snyk?
          type: boolean
          default: false
          description: Toggle to enable Snyk security scanning.
      dependencies:
        useSnykCode:
          oneOf:
            - properties:
                useSnykCode:
                  enum: [true]
                snykCodeConfig:
                  type: object
                  properties:
                    monitor:
                      title: Upload Results to Snyk
                      type: boolean
                      default: false
                      description: If true, scan results will be uploaded to Snyk for ongoing monitoring.
                    projectName:
                      title: Snyk Project Name
                      type: string
                      default: ''
                      description: Display name for the project in Snyk. Used for organizing scan reports.
                    additionalArguments:
                      title: Extra CLI Arguments
                      type: string
                      default: ''
                      description: Any additional arguments passed to the Snyk CLI.
                    failOnIssues:
                      title: Fail on Issues
                      type: boolean
                      default: false
                      description: If true, the pipeline will fail when vulnerabilities are found.
                    serviceConnectionEndpoint:
                      title: Service Connection Endpoint
                      type: string
                      default: ''
                      description: Azure DevOps service connection used to authenticate with Snyk.
                    organization:
                      title: Organization Identifier
                      type: string
                      default: ''
                      description: The Snyk organization ID under which scans and monitoring actions are performed.
            - properties:
                useSnykCode:
                  enum: [false]
                Warning:
                  type: string
                  title: Note
                  description: "This scan is currently diesable"
                  ui:readonly: true
                  default: ""

    - title: SonarQube Code Analysis
      type: object
      properties:
        useSonar:
          title: Use SonarQube?
          type: boolean
          default: false
          description: Toggle to enable SonarQube code analysis.
      dependencies:
        useSonar:
          oneOf:
            - properties:
                useSonar:
                  enum: [true]
                sonarConfig:
                  type: object
                  properties:
                    SonarQube:
                      title: SonarQube
                      type: string
                      default: ''
                      description: The Azure DevOps SonarQube service connection name.

                    cliScannerVersion:
                      title: CLI Scanner Version
                      type: string
                      default: ''
                      description: Version of the CLI scanner to use.
                    configMode:
                      title: Config Mode
                      type: string
                      enum: [file, manual]
                      default: file
                      description: Determines whether configuration is read from a file or set manually.
                  dependencies:
                    configMode:
                      oneOf:
                        - properties:
                            configMode:
                              enum: [manual]
                            cliProjectKey:
                              title: cliProjectKey
                              type: string
                              default: ''
                              description: Project key used for identifying the SonarQube project (manual mode only).
                            cliProjectName:
                              title: cliProjectName
                              type: string
                              default: ''
                              description: Name of the SonarQube project (manual mode only).
                            cliSources:
                              title: cliSources
                              type: string
                              default: '.'
                              description: Path to the source code files for the scanner to analyze.
                            extraProperties:
                              title: extraProperties
                              type: string
                              default: ''
                              description: Additional properties for configuring the scan.
                            organization:
                              title: Organization
                              type: string
                              default: ''
                              description: Name of the organization performing or responsible for the scan.
                        - properties:
                            configMode:
                              enum: [file]
            - properties:
                useSonar:
                  enum: [false]
                Warning:
                  type: string
                  title: Note
                  description: "This scan is currently diesable"
                  ui:readonly: true
                  default: ""

                
    - title: Trivy Code Scan
      type: object
      properties:
        useTrivyCode:
          title: Use Trivy?
          type: boolean
          default: false
          description: Toggle to enable Trivy vulnerability scanning.
      dependencies:
        useTrivyCode:
          oneOf:
            - properties:
                useTrivyCode:
                  enum: [true]
                trivyCodeConfig:
                  type: object
                  properties:
                    version:
                      title: version
                      type: string
                      default: 'latest'
                      description: Version of Trivy to use for scanning.
                    options:
                      title: options
                      type: string
                      default: ''
                      description: Additional CLI options passed to the Trivy scan.
                    target:
                      title: target
                      type: string
                      default: '.'
                      description: Path or target of the scan (e.g., directory reference).
                    scanners:
                      title: scanners
                      type: array
                      default: []
                      uniqueItems: true
                      description: Types of vulnerabilities to scan for. Select one or more.
                      items:
                        type: string
                        enum: ['vuln', 'misconfig', 'secret', 'license']
                    severities:
                      title: severities
                      type: array
                      default: []
                      uniqueItems: true
                      description: Severity levels to filter results by (e.g., CRITICAL,HIGH).
                      items:
                        type: string
                        enum: ["UNKNOWN", "LOW", "MEDIUM", "HIGH", "CRITICAL"]
                    ignoreUnfixed:
                      title: ignoreUnfixed
                      type: string
                      default: "false"
                      description: If true, ignores vulnerabilities that haven’t been fixed yet.
                      enum: ["true", "false"]
                    showSuppressed:
                      title: showSuppressed
                      type: string
                      default: "false"
                      description: If true, includes suppressed vulnerabilities in scan results.
                      enum: ["true", "false"]
                    ignoreScanErrors:
                      title: ignoreScanErrors
                      type: string
                      default: "false"
                      description: If true, scan errors won’t fail the pipeline.
                      enum: ["true", "false"]
                    failOnSeverityThreshold:
                      title: failOnSeverityThreshold
                      type: string
                      default: ''
                      description: If set, fails the pipeline when vulnerabilities meet or exceed this severity.
                      enum: ["UNKNOWN", "LOW", "MEDIUM", "HIGH", "CRITICAL"]
                    reports:
                      title: reports
                      type: array
                      default: []
                      uniqueItems: true
                      description: Report formats to generate (e.g., json, sarif).
                      items:
                        type: string
                        enum: ['asff', 'cosign', 'cyclonedx', 'github', 'html', 'junit', 'sarif', 'spdx', 'spdxjson', 'table']
                    publish:
                      title: publish
                      type: string
                      default: "true"
                      description: If true, publishes scan results as pipeline artifacts.
                      enum: ["true", "false"]
                    method:
                      title: method
                      type: string
                      default: 'install'
                      description: Execution method for Trivy (e.g., docker or system).
                      enum: ["install", "docker", "system"]
                  dependencies:
                    method:
                      oneOf:
                        - properties:
                            method:
                              enum: ["docker"]
                            image:
                              title: image
                              type: string
                              default: 'aquasec/trivy:latest'
                              description: Docker image name used to run Trivy in containerized mode.
                        - properties:
                            method:
                              enum: ["system"]
                            templates:
                              title: templates
                              type: string
                              default: ''
                              description: Templates used to customize the report output (sbom/system mode only).
                        - properties:
                            method:
                              enum: ["install"]
            - properties:
                useTrivyCode:
                  enum: [false]
                Warning:
                  type: string
                  title: Note
                  description: "This scan is currently diesable"
                  ui:readonly: true
                  default: ""

    - title: Snyk Image Scan
      type: object
      properties:
        useSnykImage:
          title: Enable Snyk Image Scan?
          type: boolean
          default: false
          description: Toggle to enable vulnerability scanning with Snyk.
      dependencies:
        useSnykImage:
          oneOf:
            - properties:
                useSnykImage:
                  enum: [true]
                snykImageConfig:
                  title: Snyk Scan Parameters
                  type: object
                  properties:
                    serviceConnectionEndpoint:
                      title: Service Connection Endpoint
                      type: string
                      description: Name of the Azure DevOps service connection to use for Snyk.
                    monitorWhen:
                      title: Monitor When
                      type: string
                      description: Condition to trigger monitoring.
                      enum: ["always", "onFailure", "onSuccess"]
                      default: "always"
                    failOnIssues:
                      title: Fail on Issues
                      type: boolean
                      description: Determines if the pipeline should fail if issues are found.
                      default: false
                    projectName:
                      title: Project Name
                      type: string
                      description: The project name for the Snyk scan.
                    organization:
                      title: Snyk Organization
                      type: string
                      description: The Snyk organization name to use for the scan.
            - properties:
                useSnykImage:
                  enum: [false]
                Warning:
                  type: string
                  title: Note
                  description: "Snyk image scanning is currently disabled."
                  ui:readonly: true
                  default: ""
    
    - title: Trivy Image Scan
      type: object
      properties:
        useTrivyImage:
          title: Use Trivy Image Scan?
          type: boolean
          default: false
          description: Toggle to enable Trivy image vulnerability scanning.
      dependencies:
        useTrivyImage:
          oneOf:
            - properties:
                useTrivyImage:
                  enum: [true]
                trivyImageConfig:
                  type: object
                  properties:
                    method:
                      title: method
                      type: string
                      default: 'install'
                      description: Execution method for Trivy (e.g., docker or system).
                      enum: ["install", "docker", "system"]
                    version:
                      title: version
                      type: string
                      default: 'latest'
                      description: Version of Trivy to use for scanning.
                    scanners:
                      title: scanners
                      type: array
                      default: []
                      uniqueItems: true
                      description: Types of vulnerabilities to scan for.
                      items:
                        type: string
                        enum: ['vuln', 'misconfig', 'secret', 'license']
                    severities:
                      title: severities
                      type: array
                      default: []
                      uniqueItems: true
                      description: Severity levels to filter results by.
                      items:
                        type: string
                        enum: ["UNKNOWN", "LOW", "MEDIUM", "HIGH", "CRITICAL"]
                    ignoreUnfixed:
                      title: ignoreUnfixed
                      type: string
                      default: "false"
                      description: Ignore vulnerabilities that haven’t been fixed yet.
                      enum: ["true", "false"]
                    failOnSeverityThreshold:
                      title: failOnSeverityThreshold
                      type: string
                      default: ''
                      description: Fail pipeline if vulnerabilities meet or exceed this severity.
                      enum: ["UNKNOWN", "LOW", "MEDIUM", "HIGH", "CRITICAL"]
                    reports:
                      title: reports
                      type: array
                      default: []
                      uniqueItems: true
                      description: Report formats to generate.
                      items:
                        type: string
                        enum: ['asff', 'cosign', 'cyclonedx', 'github', 'html', 'junit', 'sarif', 'spdx', 'spdxjson', 'table']
                    publish:
                      title: publish
                      type: string
                      default: "true"
                      description: Publish scan results as pipeline artifacts.
                      enum: ["true", "false"]
                  dependencies:
                    method:
                      oneOf:
                        - properties:
                            method:
                              enum: ["docker"]
                            image:
                              title: image
                              type: string
                              default: 'aquasec/trivy:latest'
                              description: Docker image used to run Trivy.
                        - properties:
                            method:
                              enum: ["system"]
                            templates:
                              title: templates
                              type: string
                              default: ''
                              description: Templates used to customize report output.
                        - properties:
                            method:
                              enum: ["install"]
            - properties:
                useTrivyImage:
                  enum: [false]
                Warning:
                  type: string
                  title: Note
                  description: "Image scan is currently disabled"
                  ui:readonly: true
                  default: ""


  steps:
    - id: validate
      name: Validate Token
      action: custom:get-secret
      input:
        secretKey: AZURE_PAT

    - id: fetch-base
      name: Fetch template for Azure DevOps repository
      if: ${{ parameters.repoUrl | parseRepoUrl | pick('host') === 'dev.azure.com' }}
      action: fetch:template
      input:
        url: ./content/scan
        values:
          parameters: ${{ parameters }}
          repoURL: https://${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}@dev.azure.com/${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}/${{ parameters.repoUrl | parseRepoUrl | pick('project') }}/_git/${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}

    - id: publish
      name: Publish to Azure DevOps
      if: ${{ parameters.repoUrl | parseRepoUrl | pick('host') === 'dev.azure.com' }}
      action: publish:azure
      input:
        allowedHosts: ['dev.azure.com']
        description: This is ${{ parameters.clusterName }}
        repoUrl: ${{ parameters.repoUrl }}
        organization: ${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}
        project: ${{ parameters.repoUrl | parseRepoUrl | pick('project') }}
        repo: ${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
        token: '${{ steps.validate.output.value }}'
        defaultBranch: ${{ parameters.pipelineBranchName }}

    - id: getRepoId
      name: Get repository ID
      action: azure:get-repo-id
      input:
        organization: ${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}
        project: ${{ parameters.repoUrl | parseRepoUrl | pick('project') }}
        repositoryName: ${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
        token: '${{ steps.validate.output.value }}'

    - id: createPipeline
      name: Create Azure Pipeline
      action: azure:pipeline:create
      input:
        organization: ${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}
        project: ${{ parameters.repoUrl | parseRepoUrl | pick('project') }}
        folder: ${{ parameters.folder }}
        name: ${{ parameters.pipelineName }}
        repositoryId: ${{ steps.getRepoId.output.repositoryId }}
        repositoryName: ${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
        branchName: ${{ parameters.pipelineBranchName }}
        token: '${{ steps.validate.output.value }}'
        yamlPath: ./scans.yaml

    # - id: runAzurePipeline
    #   name: Run Azure Pipeline
    #   action: azure:pipeline:run
    #   input:
    #     organization: ${{ (parameters.repoUrl | parseRepoUrl)['organization'] }}
    #     pipelineId: ${{ steps.createAzurePipeline.output.pipelineId }}
    #     project: ${{ (parameters.repoUrl | parseRepoUrl)['owner'] }}

    # - id: permitAzurePipeline
    #   name: Change Azure Pipeline Permissions
    #   action: azure:pipeline:permit
    #   input:
    #     organization: ${{ (parameters.repoUrl | parseRepoUrl)['organization'] }}
    #     project: ${{ (parameters.repoUrl | parseRepoUrl)['owner'] }}
    #     resourceId: <serviceEndpointId>
    #     resourceType: endpoint
    #     authorized: true
    #     pipelineId: ${{ steps.createAzurePipeline.output.pipelineId }}

    - id: flattenSnykCode
      name: Flatten Snyk Group
      action: util:flatten-parameter-group
      input:
        group: ${{ parameters.snykCodeConfig }}

    - id: ensure-snyk-group-code
      name: Ensure Variable Group Exists
      action: custom:create-or-skip-variable-group
      input:
        organization: ${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}
        project: ${{ parameters.repoUrl | parseRepoUrl | pick('project') }}
        groupName: ${{ parameters.snykCodeVariableGroupName }}
        token: ${{ steps.validate.output.value }}
        variables: ${{ steps.flattenSnykCode.output.flattened }}

    - id: flattenSonar
      name: Flatten Sonar Group
      action: util:flatten-parameter-group
      input:
        group: ${{ parameters.sonarConfig }}

    - id: ensureSonarGroup
      name: Ensure Sonar Variable Group Exists
      action: custom:create-or-skip-variable-group
      input:
        organization: ${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}
        project: ${{ parameters.repoUrl | parseRepoUrl | pick('project') }}
        groupName: ${{ parameters.sonarVariableGroupName }}
        token: ${{ steps.validate.output.value }}
        variables: ${{ steps.flattenSonar.output.flattened }}

    - id: flattenTrivyCode
      name: Flatten Trivy Group
      action: util:flatten-parameter-group
      input:
        group: ${{ parameters.trivyCodeConfig }}

    - id: ensureTrivyGroupCode
      name: Ensure Trivy Variable Group Exists
      action: custom:create-or-skip-variable-group
      input:
        organization: ${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}
        project: ${{ parameters.repoUrl | parseRepoUrl | pick('project') }}
        groupName: ${{ parameters.trivyCodeVariableGroupName }}
        token: ${{ steps.validate.output.value }}
        variables: ${{ steps.flattenTrivyCode.output.flattened }}

    - id: flattenSnykImage
      name: Flatten Snyk Image Group
      action: util:flatten-parameter-group
      input:
        group: ${{ parameters.snykImageConfig }}

    - id: ensureSnykGroupImage
      name: Ensure Snyk Image Variable Group Exists
      action: custom:create-or-skip-variable-group
      input:
        organization: ${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}
        project: ${{ parameters.repoUrl | parseRepoUrl | pick('project') }}
        groupName: ${{ parameters.snykImageVariableGroupName }}
        token: ${{ steps.validate.output.value }}
        variables: ${{ steps.flattenSnykImage.output.flattened }}

    - id: flattenTrivyImage
      name: Flatten Trivy Image Group
      action: util:flatten-parameter-group
      input:
        group: ${{ parameters.trivyImageConfig }}

    - id: ensureTrivyGroupImage
      name: Ensure Trivy Image Variable Group Exists
      action: custom:create-or-skip-variable-group
      input:
        organization: ${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}
        project: ${{ parameters.repoUrl | parseRepoUrl | pick('project') }}
        groupName: ${{ parameters.trivyImageVariableGroupName }}
        token: ${{ steps.validate.output.value }}
        variables: ${{ steps.flattenTrivyImage.output.flattened }}
    
