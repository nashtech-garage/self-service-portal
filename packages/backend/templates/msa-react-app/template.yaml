apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: react-app
  title: Creates and initializes a new React SPA
  description: This template will generate a Single Page App and deploy it on a Cluster. This application consists of three parts - Frontend, Backend, and Database.
  tags: 
    - application
spec:
  owner: user:le.caothihoang
  type: application
  parameters:
    - title: Choose A Repository Location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository location for your new  React application
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            requestUserCredentials:
              secretsKey: USER_OAUTH_TOKEN
              additionalScopes:
                github:
                - repo  # Allows creating repositories
                - workflow  # Allows managing GitHub Actions
                azure:
                - email
                - openid
            allowedHosts:
              - github.com
              - dev.azure.com

    - title: Pipeline Configuration
      required:
        - repoUrl
        - branchName
        - project
        - folder
        - repositoryId
        - scanRepositoryName
        - scanPipelineName
      properties:
        repoUrl:
          title: Repository URL
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
              - dev.azure.com
        project:
          type: string
          title: Project
          description: Azure DevOps project name
          default: azure-devops-project
        folder:
          type: string
          title: Folder
          description: Pipeline folder path
          default: /
        scanPipelineName:
          type: string
          title: Pipeline Name
          description: Name for the new pipeline
          default: scan
        repositoryId:
          type: string
          title: Repository ID
          description: Repository's unique ID
          default: ${{ secrets.AZURE_DEVOPS_PAT }}
        scanRepositoryName:
          type: string
          title: Repository Name
          description: Name of the repository
          default: Scan
        branchName:
          type: string
          title: Branch Name
          description: The name of the branch to be used for the pipeline
          default: main
    - title: Basic React Configuration
      required:
        - appName
        - backendName
        - backendImageName
        - frontendName
        - frontendImageName
      properties:
        appName:
          title: Application Name
          type: string
          description: The name of the msa react application
          ui:autofocus: true
        backendName:
          title: Backend Name
          type: string
          description: The name of the backend service
          ui:autofocus: true
        backendImageName:
          title: Backend Container Image Name
          type: string
          description: The name of your backend container image
        frontendName:
          title: Frontend Name
          type: string
          description: The name of the frontend service
          ui:autofocus: true
        frontendImageName:
          title: Fronent Container Image Name
          type: string
          description: The name of your frontent container image
    
    - title: Choose UserName of Docker Hub
      required:
        - dockerHubUserName
      properties:
        dockerHubUserName:
          title: Username of Docker Hub
          type: string
          description: Username of Docker Hub
          ui:autofocus: true
    - title: Scan
      properties:
        Tools:
          type: object
          title: Tools
          properties:
            checkboxFieldSnyk:
              title: Snyk
              type: boolean
            checkboxFieldSonar:
              title: Sonar
              type: boolean
            checkboxFieldTrivy:
              title: Trivy
              type: boolean

    # - title: Fill in some steps
    #   properties:
    #     name:
    #       title: Select environments
    #       type: array
    #       items:
    #         type: string
    #         enum:
    #           - production
    #           - staging
    #           - development
    #       uniqueItems: true
    #       ui:widget: checkboxes

    
  steps:
    - id: validate-github-token
      name: Validate Token
      action: custom:get-secret
      input:
        secretKey: PORTAL_SECRET_GITHUB_TOKEN
    - id: fetch-base
      name: Fetch template for Github repository
      if: ${{ parameters.repoUrl | parseRepoUrl | pick('host') === "github.com" }}
      action: fetch:template
      input:
        url: 'https://github.com/nashtech-garage/scaffold-msa-react'
        targetPath: .
        values:
          appName: ${{ parameters.appName }}
          backendName: ${{ parameters.backendName }}
          backendImageName: ${{ parameters.backendImageName }}                 
          frontendName: ${{ parameters.frontendName }}
          frontendImageName: ${{ parameters.frontendImageName }}       
          dockerHubUserName: ${{ parameters.dockerHubUserName }}    
          repoURL: https://${{ parameters.repoUrl | parseRepoUrl | pick('host') }}/${{ parameters.repoUrl | parseRepoUrl | pick('owner') }}/${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}

    - id: fetch-base
      name: Fetch template for Azure DevOps repository
      if: ${{ parameters.repoUrl | parseRepoUrl | pick('host') === "dev.azure.com" }}
      action: fetch:template
      input:
        url: ./content/scan
        values:
          appName: ${{ parameters.appName }}
          backendName: ${{ parameters.backendName }}
          backendImageName: ${{ parameters.backendImageName }}                 
          frontendName: ${{ parameters.frontendName }}
          frontendImageName: ${{ parameters.frontendImageName }}       
          dockerHubUserName: ${{ parameters.dockerHubUserName }}    
          repoURL: https://${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}@dev.azure.com/${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}/${{ parameters.repoUrl | parseRepoUrl | pick('project') }}/_git/${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
          
  
    # This step publishes the contents of the working directory to GitHub.
    # - id: publish
    #   name: Publish to Github
    #   if: ${{ parameters.repoUrl | parseRepoUrl | pick('host') === "github.com" }}
    #   action: publish:github
    #   input:
    #     allowedHosts: ['github.com']
    #     description: This is msa reactjs ${{ parameters.appName }} app
    #     repoUrl: ${{ parameters.repoUrl }}
    #     token: ${{ secrets.USER_OAUTH_TOKEN }}


    # This step publishes to Azure DevOps
    - id: publish
      name: Publish to Azure DevOps
      if: ${{ parameters.repoUrl | parseRepoUrl | pick('host') === "dev.azure.com" }}
      action: publish:azure
      input:
        allowedHosts: ['dev.azure.com']
        description: This is ${{ parameters.clusterName }}
        repoUrl: ${{ parameters.repoUrl }}
        organization: ${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}
        project: ${{ parameters.repoUrl | parseRepoUrl | pick('project') }}
        repo: ${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
        token: ${{ secrets.AZURE_DEVOPS_PAT }}
        filePath: scan/scan.yaml
    
    # - id: publish
    #   name: Publish to Azure DevOps
    #   if: ${{ parameters.repoUrl | parseRepoUrl | pick('host') === "dev.azure.com" && parameters.Tools.checkboxFieldTrivy === true }}
    #   action: publish:azure
    #   input:
    #     allowedHosts: ['dev.azure.com']
    #     description: This is ${{ parameters.clusterName }}
    #     repoUrl: ${{ parameters.repoUrl }}
    #     organization: ${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}
    #     project: ${{ parameters.repoUrl | parseRepoUrl | pick('project') }}
    #     repo: ${{ parameters.repoUrl | parseRepoUrl | pick('repo') }}
    #     token: ${{ secrets.USER_OAUTH_TOKEN }}

    - id: createPipeline
      name: Create Azure Pipeline
      action: azure:pipeline:create
      input:
        organization: ${{ parameters.repoUrl | parseRepoUrl | pick('organization') }}
        project: ${{ parameters.repoUrl | parseRepoUrl | pick('project') }}
        folder: ${{ parameters.folder }}
        name: ${{ parameters.scanPipelineName }}
        repositoryId: ${{ parameters.repositoryId }}
        repositoryName: ${{ parameters.repositoryName }}
        branchName: ${{ parameters.branchName }}
        token: ${{ secrets.AZURE_DEVOPS_PAT }}