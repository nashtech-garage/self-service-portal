parameters:
  - name: source
    type: string
  - name: SonarQube
    type: string
  - name: jdkVersion
    type: string
    default: 17
jobs:
  - job: sonarScan
    displayName: SonarQube Scan
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - checkout: {% raw %}${{ parameters.source }}{% endraw %}
      - task: JavaToolInstaller@1
        inputs:
          versionSpec: {% raw %}'${{ parameters.jdkVersion }}'{% endraw %}
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'
        displayName: {% raw %}'Use Java ${{ parameters.jdkVersion }}'{% endraw %}
      {%- if values.parameters.sonarConfig.sonarHost == 'Cloud' %}
      - task: SonarCloudPrepare@3
        inputs:
          SonarQube: {% raw %}${{ parameters.SonarQube }}{% endraw %}
          scannerMode: cli
          cliScannerVersion: $(cliScannerVersion)
          configMode: $(configMode)
          {%- if values.parameters.sonarConfig.configMode == 'manual' %}
          cliProjectKey: $(cliProjectKey)
          cliProjectName: $(cliProjectName)
          cliSources: $(cliSources)
          extraProperties: $(extraProperties)
          organization: $(organization)
      {%- else %}
      - task: SonarQubePrepare@7
        inputs:
          {% raw %}${{ parameters.SonarQube}}{% endraw %}
          scannerMode: 'cli'
          cliScannerVersion: $(cliScannerVersion)
          configMode: $(configMode)
          cliProjectKey: $(projectKey)
          cliProjectName: $(projectName)
          extraProperties: $(extraProperties)
      {%- endif %}
      - script: |
          for d in */; do
            if [ -f "$d/package.json" ]; then
              echo "üì¶ Installing in $d"
              npm install --prefix "$d"
              npm run --prefix "$d" build || echo "‚ö†Ô∏è No build script in $d"
            fi
          done
        displayName: 'Install and Build Angular App'
      {%- if values.parameters.sonarConfig.sonarHost == 'Cloud' %}
      - task: SonarCloudAnalyze@3
        inputs:
          jdkversion: {% raw %}${{ parameters.jdkVersion }}{% endraw%}
      - task: SonarCloudPublish@3
        inputs:
          pollingTimeoutSec: '300'
      {%- else %}
      - task: SonarQubeAnalyze@7
        inputs:
          jdkversion: {% raw %}${{ parameters.jdkVersion }}{% endraw%}
      - task: SonarQubePublish@7
        inputs:
          pollingTimeoutSec: '300'
      {% endif %}

