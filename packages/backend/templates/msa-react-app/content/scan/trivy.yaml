parameters:
  - name: source
    type: string
  - name: scanCode
    type: boolean
    default: false
  - name: scanImage
    type: boolean
    default: false

jobs:
  - job: trivyScanCode
    displayName: Trivy Scan (Code)
    {% raw %}condition: eq('${{ parameters.scanCode }}', true){% endraw %}
    pool:
      vmImage: 'ubuntu-latest'
    steps: 
      {% raw %}- checkout: ${{ parameters.source }}{% endraw %}
      - script: |
          for d in */; do
            if [ -f "$d/package.json" ]; then
              echo "ðŸ“¦ Installing in $d"
              npm install --prefix "$d"
            fi
          done
        displayName: 'Run a multi-line script'
      - task: trivy@2
        inputs:
          {%- if values.parameters.trivyCodeConfig.method == 'docker' %}
          method: $(method)
          image: $(image)
          {%- endif %}
          {%- if values.parameters.trivyCodeConfig.method == 'system' %}
          method: $(method)
          templates: $(templates)
          {%- endif %}
          version: $(version)
          options: $(options)
          type: $(type)
          target: $(target)
          scanners: $(scanners)
          severities: $(severities)
          ignoreUnfixed: $(ignoreUnfixed)
          showSuppressed: $(showSuppressed)
          ignoreScanErrors: $(ignoreScanErrors)
          failOnSeverityThreshold: $(failOnSeverityThreshold)
          reports: $(reports)
          publish: $(publish)

  - job: trivyImageScan
    displayName: Trivy Image Scan
    {% raw %}condition: eq('${{ parameters.scanImage }}', true){% endraw %}
    pool:
      vmImage: 'ubuntu-latest'
    steps: 
      {% raw %}- checkout: ${{ parameters.source }}{% endraw %}
      - task: trivy@2
        inputs:
          method: $(method)
          version: $(version)
          type: $(type)
          target: $(target)
          scanners: $(scanners)
          severities: $(severities)
          ignoreUnfixed: $(ignoreUnfixed)
          failOnSeverityThreshold: $(failOnSeverityThreshold)
          reports: $(reports)
          publish: $(publish)
