parameters:
  - name: source
    type: string
  - name: enabled
    type: boolean
    default: false
  - name: SonarQube
    type: string
  - name: jdkVersion
    type: string
    default: 17
jobs:
  - job: sonarScan
    displayName: SonarQube Scan
    {% raw %}condition: eq('${{ parameters.enabled }}', true){% endraw %}
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      {% raw %}- checkout: ${{ parameters.source }}
      - task: JavaToolInstaller@1
        inputs:
          versionSpec: '${{ parameters.jdkVersion }}'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'
        displayName: 'Use Java ${{ parameters.jdkVersion }}'{% endraw %}
      - task: SonarCloudPrepare@3
        inputs:
          {% raw %}SonarQube: ${{ parameters.SonarQube}}{% endraw %}
          scannerMode: dotnet
          dotnetScannerVersion: $(dotnetScannerVersion)
          configMode: $(configMode)
          projectKey: $(projectKey)
          projectName: $(projectName)
          extraProperties: $(extraProperties)
          organization: $(organization)
      - task: DotNetCoreCLI@2
        displayName: 'Build'
        inputs:
          command: 'build'
          projects: '**/*.csproj'
          arguments: '--configuration Release'
      - task: SonarCloudAnalyze@3
        inputs:
          jdkversion: 'JAVA_HOME_17_X64'
      - task: SonarCloudPublish@3
        inputs:
          pollingTimeoutSec: '300'

{%- if false %}
###This piece of code will never run
- task: SonarQubePrepare@7
        inputs:
          {% raw %}SonarQube: ${{ parameters.SonarQube}}{% endraw %}
          scannerMode: $(scannerMode)
          cliScannerVersion: $(cliScannerVersion)
          configMode: $(configMode)
          {%- if values.parameters.sonarConfig.configMode == 'manual' %}
          cliProjectKey: $(cliProjectKey)
          cliProjectName: $(cliProjectName)
          cliSources: $(cliSources)
          extraProperties: $(extraProperties)
          {%- endif %}
- task: SonarQubeAnalyze@5
        displayName: 'Run SonarQube Analysis'

      - task: SonarQubePublish@5
        inputs:
          pollingTimeoutSec: '300'
        displayName: 'Publish SonarQube Results'
{%- endif %}
