apiVersion: database.aws.upbound.io/v1beta1
kind: SubnetGroup
metadata:
  name: stepone-db-subnet-group
spec:
  forProvider:
    region: ap-southeast-2
    description: Subnet group for stepone RDS
    subnetIdSelector:
      matchControllerRef: true
      matchLabels:
        vpc-name: stepone-vpc
  providerConfigRef:
    name: default

---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: SecurityGroup
metadata:
  name: stepone-rds-sg
spec:
  forProvider:
    region: ap-southeast-2
    vpcIdSelector:
      matchControllerRef: true
    description: Security group for stepone RDS
    ingress:
      - fromPort: 3306
        toPort: 3306
        protocol: tcp
        cidrBlocks:
          - 10.0.0.0/16
  providerConfigRef:
    name: default
---
apiVersion: database.aws.upbound.io/v1beta1
kind: DBInstance
metadata:
  name: stepone-rds
spec:
  forProvider:
    region: ap-southeast-2
    engine: mysql
    engineVersion: "8.0"
    instanceClass: db.t3.micro
    allocatedStorage: 20
    dbName: mydatabase
    username: admin
    passwordSecretRef:
      namespace: crossplane-system
      name: rds-password
      key: password
    dbSubnetGroupNameSelector:
      matchControllerRef: true
    vpcSecurityGroupIdsSelector:
      matchControllerRef: true
    skipFinalSnapshot: true
  providerConfigRef:
    name: default
---
apiVersion: ec2.aws.crossplane.io/v1beta1
kind: SecurityGroupRule
metadata:
  name: eks-to-rds
spec:
  forProvider:
    region: ap-southeast-2
    securityGroupIdRef:
      name: eks-node-security-group
    type: egress
    protocol: tcp
    fromPort: 5432
    toPort: 5432
    destinationSecurityGroupIdRef:
      name: rds-security-group
  providerConfigRef:
    name: aws-provider
---
apiVersion: secretsmanager.aws.crossplane.io/v1beta1
kind: Secret
metadata:
  name: my-rds-secret
spec:
  forProvider:
    region: ap-southeast-2
    name: my-db-secret
    secretString: |
      {
        "username": "admin",
        "password": "MyStrongPassword"
      }
  providerConfigRef:
    name: aws-provider